// <auto-generated />
using System;
using GameZone.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameZone.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250325070336_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("GameZone.Model.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<short>("BirthYear")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Games")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActiveSubscription")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GameZone.Model.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("PlayTime")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("GameZone.Model.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Balance")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndSubscription")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PlayerId1")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartSubscription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.HasIndex("PlayerId1")
                        .IsUnique();

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("GameZone.Model.Session", b =>
                {
                    b.HasOne("GameZone.Model.Player", null)
                        .WithMany("Sessions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameZone.Model.Subscription", b =>
                {
                    b.HasOne("GameZone.Model.Player", null)
                        .WithOne()
                        .HasForeignKey("GameZone.Model.Subscription", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameZone.Model.Player", null)
                        .WithOne("Subscription")
                        .HasForeignKey("GameZone.Model.Subscription", "PlayerId1");
                });

            modelBuilder.Entity("GameZone.Model.Player", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("Subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
